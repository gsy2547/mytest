<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa" 
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:jaxws="http://cxf.apache.org/jaxws"
	xsi:schemaLocation="
						http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
						http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
						http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
						http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
						http://www.springframework.org/schema/data/jpa 
						http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
						http://cxf.apache.org/jaxws 
						http://cxf.apache.org/schemas/jaxws.xsd">
	<!-- 连接池 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="oracle.jdbc.driver.OracleDriver" />
		<property name="jdbcUrl" value="jdbc:oracle:thin:@192.168.180.128:1521:ORCL" />
		<property name="user" value="bos254" />
		<property name="password" value="bos" />
	</bean>
	<!-- <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="com.mysql.jdbc.Driver" />
		<property name="jdbcUrl" value="jdbc:mysql:///test" />
		<property name="user" value="root" />
		<property name="password" value="root" />
	</bean> -->
	
	<!-- spring整合JPA -->
	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan" value="cn.itcast.bos.domain" />
		<!-- 指定持久层提供者为Hibernate -->
		<property name="persistenceProvider">
			<bean class="org.hibernate.ejb.HibernatePersistence" />
		</property>
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<!-- 自动建表 -->
				<property name="generateDdl" value="true" />
				<property name="database" value="ORACLE" />
				<property name="databasePlatform" value="org.hibernate.dialect.Oracle10gDialect" />
				<property name="showSql" value="true" />
			</bean>
		</property>
		<property name="jpaDialect">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaDialect" />
		</property>
	</bean>
	
	<!-- 事务管理器 -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>
	
	<!-- 组件扫描 @Server @Controller @Repository -->
	<context:component-scan base-package="cn.itcast.bos.service,cn.itcast.bos.web"/>
	
	<!-- 事务注解支持 -->
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>
	
	<!-- 整合 spring data jpa -->
	<jpa:repositories base-package="cn.itcast.bos.dao" />
	
	<!-- 把cxf生成的服务代码，交给spring容器来创建代理对象 -->
	<jaxws:client id="customerServer"
				  address="http://localhost:8888/boss254_crm/service/customer"
				  serviceClass="cn.itcast.crm.service.CustomerService">
	</jaxws:client>
	<!--发布服务  -->
	<jaxws:server address="/order">
		<jaxws:serviceBean>
			<ref bean="orderService"/>
		</jaxws:serviceBean>
	</jaxws:server>
	
	<!-- 辅助shiro核心过滤器启动的bean对象 -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<!-- shiro安全管理器 -->
		<property name="securityManager" ref="securityManager"></property>
		<!-- 使用shiro安全框架的一些基础配置 -->
		<!-- 告诉框架如果没有认证跳转的页面 -->
    	<property name="loginUrl" value="/login.html"></property>
    	<!-- 告诉框架登录成功后跳转的页面 -->
    	<property name="successUrl" value="/index.html"></property>
    	<!-- 告诉框架如果没有权限的时候跳转的页面 -->
    	<property name="unauthorizedUrl" value="/unauthorizedUrl.html"></property>
    	<!-- 使用url拦截 -->
    	<property name="filterChainDefinitions">
    		<value>
    			/css/** = anon
    			/images/** = anon
    			/js/** = anon
    			/validatecode.jsp* = anon
    			/user_login.action* = anon
    			<!-- /pages/base/courier.html* = perms[courier-list] -->
    			/** = authc
    		</value>
    	</property>
	</bean>
	<!-- shiro安全管理器 -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<!-- 把自定义的realm注入给安全管理器 -->
		<property name="realm" ref="realm"></property>
		<!--配置二级缓存ehcache  -->
		<property name="cacheManager" ref="cacheManager"></property>
	</bean>
	
	<!-- 缓存管理器的配置 -->
	<bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
		<property name="cacheManagerConfigFile" value="classpath:ehcache.xml"></property>
	</bean>
	
	
	<!-- 把自定义的realm交个spring容器管理 -->
	<bean id="realm" class="cn.itcast.bos.web.action.system.realm.CustomRealm"></bean>
	
	<!-- shiro开启注解 -->
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator">
		<!-- 强制使用cglib代理 -->
		<property name="proxyTargetClass" value="true"></property>
	</bean>
	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor"></bean>
	
</beans>